name: CI/CD

on:
  ## Uncomment to allow daily automatic triggering
  # schedule:
  #   # Runs daily at 16:00 UTC, excluding weekends
  #   - cron: '0 16 * * 1-5'
  workflow_dispatch:  # Allow manual triggering for debugging

permissions:
  contents: read
  actions: write

jobs:

  holiday-check:
    name: 🛑 Check for Public Holiday
    runs-on: ubuntu-latest
    outputs:
      is_holiday: ${{ steps.check-holiday.outputs.is_holiday }}
    steps:
      - name: Install Python Dependencies
        run: pip install holidays
      - name: Check for Public Holiday
        id: check-holiday
        run: |
          python <<EOF
          from datetime import datetime
          import holidays
          import os

          today = datetime.utcnow().date()
          nyse_holidays = holidays.NYSE()  
          is_holiday = today in nyse_holidays
          if is_holiday:
              nyse_holiday_name = nyse_holidays[today]
              print(f"Today is a public holiday: {nyse_holiday_name}")
          else:
              print("US Markets are open. We can proceed with the portfolio updates")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"is_holiday={is_holiday}\n")
          EOF

  skip-check:
    name: Skip Workflow if Holiday
    runs-on: ubuntu-latest
    needs: holiday-check
    if: ${{ needs.holiday-check.outputs.is_holiday == 'true' }}
    steps:
      - name: Notify Skipping Workflow
        run: echo "Skipping workflow because today is a public holiday."

  pre-stage:
    name: 🧹 Cancel previous runs
    runs-on: ubuntu-latest
    needs: holiday-check
    if: ${{ needs.holiday-check.outputs.is_holiday == 'false' }}
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}
      - name: ⬇️ Check out
        uses: actions/checkout@v4
      - run: echo "Building"


  stage1:
    name: Set Variables
    needs: pre-stage
    runs-on: ubuntu-latest
    outputs:
      trig_update_weights_job1: ${{ steps.set-vars.outputs.trig_update_weights_job1 }}
      trig_update_weights_job2: ${{ steps.set-vars.outputs.trig_update_weights_job2 }}
      trig_update_weights_job3: ${{ steps.set-vars.outputs.trig_update_weights_job3 }}
      trig_update_weights_job4: ${{ steps.set-vars.outputs.trig_update_weights_job4 }}
    steps:
      - name: Set Variables
        id: set-vars
        run: |
          python <<EOF
          from datetime import datetime
          import os

          today = datetime.utcnow()
          is_weekly = today.weekday() == 0  # Monday
          is_monthly = today.day == 1       # First day of the month

          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write("trig_update_weights_job1=false\n")  # Always false
              f.write("trig_update_weights_job2=true\n")   # Always true
              f.write(f"trig_update_weights_job3={'true' if is_weekly else 'false'}\n")  # Weekly
              f.write(f"trig_update_weights_job4={'true' if is_monthly else 'false'}\n")  # Monthly
          EOF
      - name: Debug Variables
        run: |
          echo "Job 1 Trigger: ${{ steps.set-vars.outputs.trig_update_weights_job1 }}"
          echo "Job 2 Trigger: ${{ steps.set-vars.outputs.trig_update_weights_job2 }}"
          echo "Job 3 Trigger: ${{ steps.set-vars.outputs.trig_update_weights_job3 }}"
          echo "Job 4 Trigger: ${{ steps.set-vars.outputs.trig_update_weights_job4 }}"
          
  portfolio_lan:
    name: Update Portfolio LAN
    needs: stage1
    uses: ./.github/workflows/portfolio_update.yml
    secrets:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
    with:
      portfolio_id: 1
      trig_meth_exp: false
      trig_update_weights: ${{ needs.stage1.outputs.trig_update_weights_job1 == 'true'}}

  portfolio_ed_daily:
    name: Update Portfolio ED Daily
    needs: stage1
    uses: ./.github/workflows/portfolio_update.yml
    secrets:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
    with:
      portfolio_id: 2
      trig_meth_exp: true
      trig_update_weights: ${{ needs.stage1.outputs.trig_update_weights_job2 == 'true'}}

  portfolio_ed_weekly:
    name: Update Portfolio ED Weekly
    needs: stage1
    uses: ./.github/workflows/portfolio_update.yml
    secrets:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
    with:
      portfolio_id: 3
      trig_meth_exp: false
      trig_update_weights: ${{ needs.stage1.outputs.trig_update_weights_job3 == 'true' }}

  portfolio_ed_monthly:
    name: Update Portfolio ED Monthly
    needs: stage1
    uses: ./.github/workflows/portfolio_update.yml
    secrets:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
    with:
      portfolio_id: 4
      trig_meth_exp: true
      trig_update_weights: ${{ needs.stage1.outputs.trig_update_weights_job4 == 'true' }}
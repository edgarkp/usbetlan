name: CI/CD

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  stage1:
    name: Set Variables
    runs-on: ubuntu-latest
    outputs:
      portfolio_id: ${{ steps.set-vars.outputs.portfolio_id }}
      trig_update_weights_job2: ${{ steps.set-vars.outputs.trig_update_weights_job2 }}
      trig_update_weights_job3: ${{ steps.set-vars.outputs.trig_update_weights_job3 }}
      trig_update_weights_job4: ${{ steps.set-vars.outputs.trig_update_weights_job4 }}
      trig_meth_exp: ${{ steps.set-vars.outputs.trig_meth_exp }}
    steps:
      - name: Calculate Hour Offset
        id: hour-offset
        run: |
          START_TIME="$(date -d "$(date +%Y-%m-%dT00:00:00Z)" +%s)"
          CURRENT_TIME="$(date +%s)"
          ELAPSED_HOURS=$(( (CURRENT_TIME - START_TIME) / 3600 ))
          echo "::set-output name=elapsed_hours::$ELAPSED_HOURS"

      - name: Set Variables
        id: set-vars
        run: |
          ELAPSED_HOURS=${{ steps.hour-offset.outputs.elapsed_hours }}

          # Set trig_update_weights for job2
          if (( ELAPSED_HOURS % 1 == 0 )); then
            echo "::set-output name=trig_update_weights_job2::true"
          else
            echo "::set-output name=trig_update_weights_job2::false"
          fi

          # Set trig_update_weights for job3
          if (( ELAPSED_HOURS % 3 == 0 )); then
            echo "::set-output name=trig_update_weights_job3::true"
          else
            echo "::set-output name=trig_update_weights_job3::false"
          fi

          # Set trig_update_weights for job4
          if (( ELAPSED_HOURS % 6 == 0 )); then
            echo "::set-output name=trig_update_weights_job4::true"
          else
            echo "::set-output name=trig_update_weights_job4::false"
          fi

          echo "::set-output name=portfolio_id::12345"
          echo "::set-output name=trig_meth_exp::methodA"

  stage2:
    name: Stage 2 - Update Portfolios
    needs: stage1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_name: ["update_portfolio_1", "update_daily_portfolio_2", "update_weekly_portfolio_2", "update_monthly_portfolio_2"]
        job_portfolio_id: [1, 2, 3, 4]
        job_trig_update_weights: ["false", "${{ needs.stage1.outputs.trig_update_weights_job2 }}", "${{ needs.stage1.outputs.trig_update_weights_job3 }}", "${{ needs.stage1.outputs.trig_update_weights_job4 }}"]
        job_trig_meth_exp: ["false", "true" , "false", "true"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: ðŸ“¦ Install Poetry
        uses: snok/install-poetry@v1

      - name: ðŸ“¦ Install dependencies
        run: poetry install

      - name: Run Python Function
        env:
          GITHUB_SECRET_DB_HOST: ${{ secrets.DB_HOST }}
          GITHUB_SECRET_DB_NAME: ${{ secrets.DB_NAME }}
          GITHUB_SECRET_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          GITHUB_SECRET_DB_PORT: ${{ secrets.DB_PORT }}
          GITHUB_SECRET_DB_USERNAME: ${{ secrets.DB_USERNAME }}
        run: |
          python -c "
          python test_app_cicd.py \
          ${{ matrix.job_portfolio_id }} \
          $(( ${{ matrix.job_trig_update_weights }} == 'true' ? 1 : 0 )) \
          $(( ${{ matrix.job_trig_meth_exp }} == 'true' ? 1 : 0 )) \
          $DB_USERNAME \
          $DB_PASSWORD \
          $DB_HOST \
          $DB_PORT \
          $DB_NAME
